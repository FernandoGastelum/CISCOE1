/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ModuloReservas.util;

import DTOs.ComputadoraDTO;
import ModuloAdministracion.Interfaz.IComputadoraDAO;
import ModuloReservas.FrmConfirmarReserva;
import ModuloReservas.FrmReservas;
import ModuloReservas.Interfaz.IReservaNegocio;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

/**
 *
 * @author Ilian Gastelum 
 */
public class ComputadoraPanel extends javax.swing.JPanel { // Atributo para almacenar la imagen
    
    private static final int ANCHO  = 150;
    private static final int ALTO = 150;
    private boolean ventanaAbierta = false;
    /**
     * Creates new form ComputadoraPanel
     * @param computadora
     */
    public ComputadoraPanel(ComputadoraDTO computadora, String idUsuario, String minutos, boolean lista, FrmReservas frmReserva, IReservaNegocio reservaNegocio) {
        
        initComponents();
        Icon icono = new ImageIcon(new ImageIcon(getClass().getResource("/images/PcIcon.png")).getImage().getScaledInstance(150, 150, 0));
        imagenLabel.setIcon(icono);
        
        this.numeroComputadoraLabel.setText(computadora.getNumeroMaquina().toString());
        
        Color color = ColorUtil.parseColor(computadora.getCarrera().getColor());
        this.colorPanel.setBackground(color);
        this.colorPanel.setPreferredSize(new Dimension(ANCHO, ALTO));
        this.colorPanel.setMaximumSize(new Dimension(ANCHO, ALTO));
        this.colorPanel.setMinimumSize(new Dimension(ANCHO, ALTO));
        if(lista==true){
            this.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    if (!frmReserva.isVentanaReservaAbierta()) {
                        frmReserva.setVentanaReservaAbierta(true); 

                        FrmConfirmarReserva nuevaVentana = new FrmConfirmarReserva(
                            computadora, idUsuario, minutos, frmReserva, reservaNegocio
                        );

                        frmReserva.deshabilitarVentana();
                        nuevaVentana.setVisible(true);
                    }
                }
            });
        }
        
    }
    public class ColorUtil {

    public static Color parseColor(String colorStr) {
        if (colorStr == null) return Color.GRAY; // color por defecto

        colorStr = colorStr.trim().toLowerCase();

        // Colores por nombre
        switch (colorStr) {
            case "red": return Color.RED;
            case "blue": return Color.BLUE;
            case "green": return Color.GREEN;
            case "yellow": return Color.YELLOW;
            case "orange": return Color.ORANGE;
            case "black": return Color.BLACK;
            case "white": return Color.WHITE;
            case "gray": return Color.GRAY;
            case "pink": return Color.PINK;
            case "cyan": return Color.CYAN;
            case "magenta": return Color.MAGENTA;
        }

        // Si es un color hexadecimal (#RRGGBB)
        if (colorStr.matches("^#([A-Fa-f0-9]{6})$")) {
            return Color.decode(colorStr);
        }

        // Si es rgb(r,g,b)
        if (colorStr.startsWith("rgb")) {
            try {
                String valores = colorStr.substring(colorStr.indexOf("(") + 1, colorStr.indexOf(")"));
                String[] rgb = valores.split(",");
                int r = Integer.parseInt(rgb[0].trim());
                int g = Integer.parseInt(rgb[1].trim());
                int b = Integer.parseInt(rgb[2].trim());
                return new Color(r, g, b);
            } catch (Exception e) {
                return Color.GRAY;
            }
        }

        return Color.GRAY; // fallback
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numeroComputadoraLabel = new javax.swing.JLabel();
        colorPanel = new javax.swing.JPanel();
        imagenLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(86, 86, 86));
        setMaximumSize(new java.awt.Dimension(174, 222));
        setMinimumSize(new java.awt.Dimension(174, 222));

        numeroComputadoraLabel.setForeground(new java.awt.Color(255, 255, 255));
        numeroComputadoraLabel.setText("0");

        imagenLabel.setMaximumSize(new java.awt.Dimension(500, 500));
        imagenLabel.setMinimumSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout colorPanelLayout = new javax.swing.GroupLayout(colorPanel);
        colorPanel.setLayout(colorPanelLayout);
        colorPanelLayout.setHorizontalGroup(
            colorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(colorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        colorPanelLayout.setVerticalGroup(
            colorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(colorPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(imagenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(colorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(numeroComputadoraLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(numeroComputadoraLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(colorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel colorPanel;
    private javax.swing.JLabel imagenLabel;
    private javax.swing.JLabel numeroComputadoraLabel;
    // End of variables declaration//GEN-END:variables
}
